class Terrain {
  field WichmannHill rng;
  field int baseHt;
  field Array heights;

  constructor Terrain new(int seed) {
    let heights = Array.new(17);
    let rng = WichmannHill.new(seed, seed / 2, seed / 3);
    let baseHt = 200;
    do rng.setMax(100);
    do newHeights();
    return this;
  }

  method void newHeights() {
    var int n;
    let n = 0;
    while (n < 17) {
      if ((n = 2) | (n = 3) | (n = 13) | (n = 14)) {
        let heights[n] = baseHt;
      } else {
        let heights[n] = baseHt - rng.next();
        if (heights[n] < 5) {
          let heights[n] = 5;
        } else {
          if (heights[n] > 250) { let heights[n] = 250; }
        }
      }
      let n = n + 1;
    }
    return;
  }

  method void draw() {
    var int i;
    let i = 0;
    do Screen.setColor(false);
    while (i < 16) {
      if (~(i = 2) & ~(i = 13)) {
        do Screen.drawLine(i * 32, heights[i], ((i + 1) * 32) - 1, heights[i + 1]);
        do Screen.drawLine(i * 32, heights[i] - 1, ((i + 1) * 32) - 1, heights[i + 1] - 1);
        do Screen.drawLine(i * 32, heights[i] - 2, ((i + 1) * 32) - 1, heights[i + 1] - 2);
        do Screen.drawLine(i * 32, heights[i] - 3, ((i + 1) * 32) - 1, heights[i + 1] - 3);
      }
      let i = i + 1;
    }
    return;
  }

  method void drawLandings() {
    do Screen.drawLine(64, baseHt, 96, baseHt);
    do Screen.drawLine(64, baseHt - 3, 96, baseHt - 3);
    do Screen.drawLine(416, baseHt, 448, baseHt);
    do Screen.drawLine(416, baseHt - 3, 448, baseHt - 3);
    return;
  }

  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }
}
