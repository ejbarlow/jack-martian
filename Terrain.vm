function Terrain.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
push argument 0
push constant 2
call Math.divide 2
push argument 0
push constant 3
call Math.divide 2
call WichmannHill.new 3
pop this 0
push constant 200
pop this 1
push this 0
push constant 100
call WichmannHill.setMax 2
pop temp 0
push pointer 0
return
function Terrain.draw 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
call WichmannHill.next 1
pop local 1
push this 0
call WichmannHill.next 1
pop local 2
push constant 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push constant 32
call Math.multiply 2
push this 1
push local 1
sub
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push this 1
push local 2
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 32
call Math.multiply 2
push this 1
push constant 1
sub
push local 1
sub
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push this 1
push constant 1
sub
push local 2
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 32
call Math.multiply 2
push this 1
push constant 2
sub
push local 1
sub
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push this 1
push constant 2
sub
push local 2
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 32
call Math.multiply 2
push this 1
push constant 3
sub
push local 1
sub
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push this 1
push constant 3
sub
push local 2
sub
call Screen.drawLine 4
pop temp 0
push local 2
pop local 1
push local 0
push constant 0
eq
push local 0
push constant 1
eq
or
push local 0
push constant 11
eq
or
push local 0
push constant 12
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
goto IF_END0
label IF_FALSE0
push local 2
push constant 50
sub
push this 0
call WichmannHill.next 1
add
pop local 2
push local 2
push constant 3
push constant 255
push this 1
sub
sub
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 3
push constant 255
push this 1
sub
sub
pop local 2
label IF_FALSE1
push local 2
push this 1
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
pop local 2
label IF_FALSE2
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Terrain.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
