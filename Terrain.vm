function Terrain.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 17
call Array.new 1
pop this 2
push argument 0
push argument 0
push constant 2
call Math.divide 2
push argument 0
push constant 3
call Math.divide 2
call WichmannHill.new 3
pop this 0
push constant 200
pop this 1
push this 0
push constant 100
call WichmannHill.setMax 2
pop temp 0
push pointer 0
call Terrain.newHeights 1
pop temp 0
push pointer 0
return
function Terrain.newHeights 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 17
lt
not
if-goto WHILE_END0
push local 0
push constant 2
eq
push local 0
push constant 3
eq
or
push local 0
push constant 13
eq
or
push local 0
push constant 14
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 2
add
push this 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push this 2
add
push this 1
push this 0
call WichmannHill.next 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 5
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push this 2
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END1
label IF_FALSE1
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 250
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push this 2
add
push constant 250
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
label IF_END1
label IF_END0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Terrain.draw 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push constant 2
eq
not
push local 0
push constant 13
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 32
call Math.multiply 2
push local 0
push this 2
add
pop pointer 1
push that 0
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push local 0
push constant 1
add
push this 2
add
pop pointer 1
push that 0
call Screen.drawLine 4
pop temp 0
push local 0
push constant 32
call Math.multiply 2
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 1
sub
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push local 0
push constant 1
add
push this 2
add
pop pointer 1
push that 0
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 32
call Math.multiply 2
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 2
sub
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push local 0
push constant 1
add
push this 2
add
pop pointer 1
push that 0
push constant 2
sub
call Screen.drawLine 4
pop temp 0
push local 0
push constant 32
call Math.multiply 2
push local 0
push this 2
add
pop pointer 1
push that 0
push constant 3
sub
push local 0
push constant 1
add
push constant 32
call Math.multiply 2
push constant 1
sub
push local 0
push constant 1
add
push this 2
add
pop pointer 1
push that 0
push constant 3
sub
call Screen.drawLine 4
pop temp 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Terrain.drawLandings 0
push argument 0
pop pointer 0
push constant 64
push this 1
push constant 96
push this 1
call Screen.drawLine 4
pop temp 0
push constant 64
push this 1
push constant 3
sub
push constant 96
push this 1
push constant 3
sub
call Screen.drawLine 4
pop temp 0
push constant 416
push this 1
push constant 448
push this 1
call Screen.drawLine 4
pop temp 0
push constant 416
push this 1
push constant 3
sub
push constant 448
push this 1
push constant 3
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Terrain.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
