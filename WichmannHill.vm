function WichmannHill.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function WichmannHill.next 4
push argument 0
pop pointer 0
push this 0
push constant 177
call WichmannHill.mod 2
push constant 171
call Math.multiply 2
push this 0
push constant 177
call Math.divide 2
push constant 2
call Math.multiply 2
sub
pop local 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 30269
add
pop local 0
label IF_FALSE0
push this 1
push constant 176
call WichmannHill.mod 2
push constant 172
call Math.multiply 2
push this 1
push constant 176
call Math.divide 2
push constant 35
call Math.multiply 2
sub
pop local 1
push local 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 30307
add
pop local 1
label IF_FALSE1
push this 2
push constant 178
call WichmannHill.mod 2
push constant 170
call Math.multiply 2
push this 2
push constant 178
call Math.divide 2
push constant 63
call Math.multiply 2
sub
pop local 2
push local 2
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push constant 30323
add
pop local 2
label IF_FALSE2
push local 0
pop this 0
push local 1
pop this 1
push local 2
pop this 2
push local 0
push constant 3
call Math.divide 2
pop local 0
push local 1
push constant 3
call Math.divide 2
pop local 1
push local 2
push constant 3
call Math.divide 2
pop local 2
push local 0
push local 1
add
push local 2
add
pop local 3
push local 3
push constant 100
call WichmannHill.mod 2
pop local 3
push local 3
return
function WichmannHill.mod 1
push argument 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
sub
push constant 1
neg
gt
not
if-goto WHILE_END0
push local 0
push argument 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function WichmannHill.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
